steps:

  # pull docker last cached image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [
        '-c',
        'docker pull gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:latest || true',
    ]

  # build docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'build',
        '-t', 'gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:$BRANCH_NAME$TAG_NAME-$SHORT_SHA',
        '-t', 'gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:latest',
        '-f', 'Dockerfile-production',
        '--cache-from', 'gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:latest',
        '.'
    ]

  # push docker image to the repository
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:$BRANCH_NAME$TAG_NAME-$SHORT_SHA' ]

# store images
images: [
    'gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:$BRANCH_NAME$TAG_NAME-$SHORT_SHA',
    'gcr.io/${_PROJECT_ID}/$_DEPLOYMENT:latest'
]

# arguments
substitutions:
      _PROJECT_ID: 	inner-catfish-339817 # PROJECT ID
      _K8S_ZONE:    us-east4             # K8s zone
      _K8S_CLUSTER: autopilot-cluster-1  # K8s cluster name
      _NAMESPACE:   default              # K8S name space
      _DEPLOYMENT:  frontend             # K8S deployment name